---


- name: installing linters via package manager
  become: yes
  package: name={{ item }} state=present
  with_items:
    - shellcheck
    - libxml2-utils
    - tidy

- name: Check if last gem linter is installed
  command: "rubocop --version"
  ignore_errors: true
  register: last_gem_linter_check
  changed_when: false

- block:

  - name: installing linters via gem
    shell: >
      {{  ansible_env.HOME }}/.rbenv/versions/{{ ruby_version }}/bin/gem install {{ item }}
    with_items:
      - scss_lint
      - sqlint
      - observr #autotest
      - rubocop

  when: last_gem_linter_check.rc != 0

- name: installing linters/tools via npm
  shell: >
    source ~/.config/zsh/.zshrc &&
    npm install -g
    jsonlint fixjson markdownlint-cli instant-markdown-d serverless neovim
    stylelint write-good remark-lint tern eslint tern-lint typescript
    eslint-config-standard eslint-plugin-node eslint-plugin-promise
    eslint-plugin-standard htmllint
    csslint prettier tree-sitter lua-fmt
    executable=/bin/zsh

- name: installing linters via pip
  shell: "{{ ansible_env.HOME }}/.local/bin/pip install --user {{ item }}"
  with_items:
    - pyflakes
    - proselint
    - yamllint
    - ansible-lint
    - vim-vint
    - cfn-lint
    - gitlint

- name: create yamllint dir
  file: path={{ config_dir }}/yamllint state=directory

- name: link yamllint cfg
  file:
    src: "{{ item }}"
    dest: "{{ config_dir }}/yamllint/config"
    state: link
  with_fileglob:
    - linters/yamllint
