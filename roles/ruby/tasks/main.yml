---
- name: Check if rbenv is installed
  stat:
    path: "{{ ansible_env.HOME }}/.rbenv/bin/rbenv"
  register: rbenv_check

- name: Install and configure rbenv
  block:
    - name: Install rbenv dependencies
      become: true
      ansible.builtin.package:
        name:
          - libssl-dev
          - libreadline-dev
          - zlib1g-dev
          - libyaml-dev
        state: present

    - name: Clone rbenv repository
      ansible.builtin.git:
        repo: https://github.com/rbenv/rbenv.git
        dest: "{{ ansible_env.HOME }}/.rbenv"
        version: "{{ rbenv_version }}"
        accept_hostkey: true
      async: 300
      poll: 5

    - name: Create rbenv plugins directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.rbenv/plugins"
        state: directory

    - name: Configure rbenv
      ansible.builtin.shell: |
        cd ~/.rbenv
        src/configure
        make -C src
        eval "$(rbenv init -)"
      async: 1800
      poll: 10

    - name: Clone ruby-build repository
      ansible.builtin.git:
        repo: https://github.com/rbenv/ruby-build.git
        dest: "{{ ansible_env.HOME }}/.rbenv/plugins/ruby-build"
        accept_hostkey: true
      async: 300
      poll: 5

    - name: Symlink rbenv to ~/.local/bin/
      ansible.builtin.file:
        src: "{{ ansible_env.HOME }}/.rbenv/bin/rbenv"
        dest: "{{ ansible_env.HOME }}/.local/bin/rbenv"
        state: link

  when: not rbenv_check.stat.exists

- name: Check if desired ruby version is installed
  shell: "{{ ansible_env.HOME }}/.rbenv/bin/rbenv versions --bare | grep -x {{ ruby_version | replace('v', '') }}"
  register: ruby_version_check
  ignore_errors: true
  changed_when: false

- name: Install Ruby
  ansible.builtin.shell: |
    {{ ansible_env.HOME }}/.rbenv/bin/rbenv install --skip-existing {{ ruby_version | replace('v', '') }}
    {{ ansible_env.HOME }}/.rbenv/bin/rbenv global {{ ruby_version | replace('v', '') }}
  async: 1800
  poll: 10
  when: ruby_version_check.rc != 0
