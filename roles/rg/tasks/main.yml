---

- name: Check if ripgrep is installed and matches desired version
  ansible.builtin.shell: "rg --version | head -n 1 | awk '{print $2}'"
  register: current_rg_version
  ignore_errors: true
  changed_when: false

- name: Create a temporary directory for ripgrep download
  ansible.builtin.tempfile:
    state: directory
    suffix: ripgrep
  register: temp_dir
  when: current_rg_version.stdout != rg_version

- name: Download and unarchive ripgrep
  ansible.builtin.unarchive:
    src: "https://github.com/BurntSushi/ripgrep/releases/download/{{ rg_version }}/ripgrep-{{ rg_version | replace('v', '') }}-x86_64-unknown-linux-musl.tar.gz"
    dest: "{{ temp_dir.path }}"
    remote_src: yes
  when: current_rg_version.stdout != rg_version

- name: Install ripgrep
  become: yes
  ansible.builtin.copy:
    src: "{{ temp_dir.path }}/ripgrep-{{ rg_version }}-x86_64-unknown-linux-musl/rg"
    dest: /usr/local/bin/rg
    mode: '0755'
    remote_src: yes
  when: current_rg_version.stdout != rg_version

- name: Clean up temporary directory
  ansible.builtin.file:
    path: "{{ temp_dir.path }}"
    state: absent
  when: temp_dir.path is defined and current_rg_version.stdout != rg_version